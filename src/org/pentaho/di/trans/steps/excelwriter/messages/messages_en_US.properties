#
# Excel Writer plugin for Pentaho PDI a.k.a. Kettle
#
# Copyright (C) 2010 Slawomir Chodnicki
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#

ExcelWriterDialog.DialogTitle=Excel Writer Step v1.2 by type-exit.org
ExcelWriterDialog.FormatColumn.Column=Format
ExcelWriterDialog.LengthColumn.Column=Length
ExcelWriterDialog.FieldsTab.TabTitle=Fields
ExcelWriterDialog.Encoding.Label=Encoding 
ExcelWriterDialog.ProtectSheet.Label=Protect sheet? (XLS format only)
ExcelWriterDialog.ProtectSheet.Tooltip=Lock the sheet for modification by setting a password
ExcelWriterDialog.Template.Label=Use template when creating new files
ExcelWriterDialog.Template.Tooltip=When a new output file is required and this is checked, the template file from below will be copied instead of creating an empty file.  
ExcelWriterDialog.TemplateFilename.Label=Template file
ExcelWriterDialog.TemplateSheet.Label=Use template when creating new sheets
ExcelWriterDialog.TemplateSheet.Tooltip=When a new output sheet is required and this is checked, the template sheet from below will be cloned instead of creating an empty sheet. A template sheet must not contain complex graphics or charts, as they may get lost or cause errors when cloned. Other content and formatting should be fine.  
ExcelWriterDialog.TemplateSheetname.Label=Template sheet
ExcelWriterDialog.Append.Tooltip=If the file and the sheet exist,\n PDI will append. Otherwise, a new file and sheet will be created.
ExcelWriterDialog.Password.Label=Password
ExcelWriterDialog.GroupColumn.Column=Group
ExcelWriterDialog.EndedLine.Label=Add Ending line of file 
ExcelWriterDialog.Header.Label=Write Header 
ExcelWriterDialog.Header.Tooltip=Writes the field names (or field titles if specified) as the first row of the output.
ExcelWriterDialog.Footer.Label=Write Footer 
ExcelWriterDialog.Footer.Tooltip=Writes the field names (or field titles if specified) as the last row of the output.
ExcelWriterDialog.TypeColumn.Column=Type
ExcelWriterDialog.NullColumn.Column=Null
ExcelWriterDialog.Filename.Label=Filename 
ExcelWriterDialog.MinWidth.Tooltip=Sets the output to non-padded width.
ExcelWriterDialog.Append.Label=Append lines if file and sheet exist
ExcelWriterDialog.DoNotOpenNewFileInit.Label=Wait for first row before creating file
ExcelWriterDialog.SplitEvery.Label=Split every ... data rows
ExcelWriterDialog.SplitEvery.Tooltip=Enter a positive number to create a new output file every ... data rows. The files will be numbered.
ExcelWriterDialog.SpecifyFormat.Label=Specify Date time format
ExcelWriterDialog.NoFilesFound.DialogMessage=No files found\!  Please check the filename/directory and options.
ExcelWriterDialog.PrecisionColumn.Column=Precision
ExcelWriterDialog.FileTab.TabTitle=File && Sheet
ExcelWriterDialog.Format.Label=Format 
ExcelWriterDialog.Sheetname.Tooltip=The name of the sheet that will used for writing data.
ExcelWriterDialog.Enclosure.Label=Enclosure 
ExcelWriterDialog.DateTimeFormat.Label=Date time format
ExcelWriterDialog.Sheetname.Label=Sheet name
ExcelWriterDialog.NameColumn.Column=Name
ExcelWriterDialog.DoNotOpenNewFileInit.Tooltip=Check this if you don''t want to create file when the transformation starts.\n PDI will create file at first row received.
ExcelWriterDialog.AddFileToResult.Tooltip=Check this if you wan to add filenames to result filenames.
ExcelWriterDialog.AddDate.Label=Include date in filename?
ExcelWriterDialog.MinWidth.Button=\ &Minimal width 
ExcelWriterDialog.Separator.Label=Separator 
ExcelWriterDialog.SpecifyFormat.Tooltip=Specify Date time format
ExcelWriterDialog.Pad.Label=Right pad fields
ExcelWriterDialog.ShowFiles.Button=&Show filename(s)...
ExcelWriterDialog.Password.Tooltip=Password to protect the sheet
ExcelWriterDialog.AddTime.Label=Include time in filename? 
ExcelWriterDialog.SelectOutputFiles.DialogMessage=Output file(s)\:
ExcelWriterDialog.AddFileToResult.Label=Add filenames to result
ExcelWriterDialog.AddStepnr.Label=Include stepnr in filename? 
ExcelWriterDialog.SelectOutputFiles.DialogTitle=Output files
ExcelWriterDialog.ContentTab.TabTitle=Content
ExcelWriterDialog.AutoSize.Label=Auto size columns
ExcelWriterDialog.AutoSize.Tooltip=Automatically size all columns to largest value. This may be slow on large sheets. VMs in headless mode may have to define the java.awt.headless property: System.setProperty("java.awt.headless", "true"); or java -Djava.awt.headless=true in order for this to work.  
ExcelWriterDialog.TemplateGroup.Label=Template
ExcelWriterDialog.NullIsBlank.Label=Retain NULL values
ExcelWriterDialog.NullIsBlank.Tooltip=If checked, NULL values will be preserved in your output. Otherwise, NULL values will be replaced with an empty string.
ExcelWriterDialog.FormatXLS.Label=xls [Excel 97 and above]
ExcelWriterDialog.FormatXLSX.Label=xlsx [Excel 2007 and above]
ExcelWriterDialog.Filename.Tooltip=This is the Excel filename that the rows will be written to
ExcelWriterDialog.Extension.Tooltip=This is the file extension of the Excel file. It also implies the file format. 

ExcelWriterDialog.IfFileExists.Label=If output file exists
ExcelWriterDialog.IfFileExists.Tooltip=Specifies what to do when the output file exists. You may choose to delete it and replace it with a fresh file or reuse the existing file for writing.  
ExcelWriterDialog.IfFileExists.CreateNew.Label=replace with new output file
ExcelWriterDialog.IfFileExists.Reuse.Label=Use existing file for writing

ExcelWriterDialog.MakeActiveSheet.Label=Make this the active sheet
ExcelWriterDialog.MakeActiveSheet.Tooltip=If checked the output sheet is going to be the active sheet (i.e. first sheet you see when opening the document) in the file. If not checked any previously active sheet will continue to be the active sheet of the file.
ExcelWriterDialog.IfSheetExists.Label=If sheet exists in output file
ExcelWriterDialog.IfSheetExists.CreateNew.Label=replace with new sheet
ExcelWriterDialog.IfSheetExists.Reuse.Label=write to existing sheet
ExcelWriterDialog.IfSheetExists.Tooltip=If the sheet exists in the file you may choose to delete it and replace it with a fresh sheet or reuse the existing sheet for writing.
ExcelWriterDialog.StartingCell.Label=Start writing at cell
ExcelWriterDialog.StartingCell.Tooltip=Enter cell reference to start writing at, i.e. B2

ExcelWriterDialog.RowWritingMethod.Label=When writing rows
ExcelWriterDialog.RowWritingMethod.Tooltip=When writing rows you can choose to write into existing rows or to push down existing content down first. This may be useful when trying to preserve a custom footer from a template sheet for example.
ExcelWriterDialog.RowWritingMethod.Overwrite.Label=overwrite existing cells
ExcelWriterDialog.RowWritingMethod.PushDown.Label=shift existing cells down

ExcelWriterDialog.UseTitleStyleCell.Column=Header/Footer style from cell
ExcelWriterDialog.UseStyleCell.Column=Style from cell
ExcelWriterDialog.TitleColumn.Column=Field title
ExcelWriterDialog.CommentField.Column=Cell comment (XLSX)
ExcelWriterDialog.CommentAuthor.Column=Cell comment author (XLSX)
ExcelWriterDialog.FormulaField.Column=field contains formula
ExcelWriterDialog.HyperLinkField.Column=Hyperlink

ExcelWriterDialog.writeToExistingGroup.Label=When writing to existing sheet
ExcelWriterDialog.AppendLines.Label=Start writing at end of sheet (appending lines)
ExcelWriterDialog.AppendLines.Tooltip=If checked the output begins after the last defined row of the existing excel sheet 
ExcelWriterDialog.SkipRows.Label=Offset by ... rows
ExcelWriterDialog.SkipRows.Tooltip=You can choose to move the starting output row by a positive or negative number. It may be useful to specify a negative offset if you want to append to an existing sheet, but keep existing custom footer lines at the bottom of the sheet. 
ExcelWriterDialog.EmptyRows.Label=Begin by writing ... empty lines
ExcelWriterDialog.EmptyRows.Tooltip=When writing to an existing sheet you may choose to write a few empty lines first. This is useful if you want to append rows to an existing sheet, but offset them to clearly see the bounds of each generated block of rows.
ExcelWriterDialog.OmitHeader.Label=Omit header
ExcelWriterDialog.OmitHeader.Tooltip=You may choose to not write a header if you are writing to an existing sheet. This is useful if you want to generate new files with header, but do not want to repeat the header in subsequent runs, where you append to the same file.

ExcelWriterDialog.fileGroup.Label=File
ExcelWriterDialog.sheetGroup.Label=Sheet
ExcelWriterDialog.ContentGroup.Label=Content options
ExcelWriterDialog.fieldGroup.Label=Fields
ExcelWriterDialog.ProtectedBy.Label=Protected by user
ExcelWriterDialog.ProtectedBy.Tooltip=The name of the user protecting the sheet

ExcelWriterDialog.ForceFormulaRecalculation.Label=Force formula recalculation
ExcelWriterDialog.ForceFormulaRecalculation.Tooltip=Check this if you want Kettle to evaluate all of the workbook formulas when done. This is useful if you find that Excel is displaying cached (and thus wrong) values in formula fields. 
ExcelWriterDialog.LeaveExistingStylesUnchanged.Label=Leave styles of existing cells unchanged
ExcelWriterDialog.LeaveExistingStylesUnchanged.Tooltip=This setting will leave all styles of existing cells in your template alone. This can be useful if you got specifically preformatted area in your sheet where you just want to replace the data, leaving all style information unchanged (like borders, background color etc.).

ExcelWriterStepMeta.CheckResult.FieldsNotFound=Fields that were not found in input stream\:\n\n{0}
ExcelWriterStepMeta.CheckResult.ExpectedInputError=No input received from other steps\!
ExcelWriterStepMeta.CheckResult.ExpectedInputOk=Step is receiving info from other steps.
ExcelWriterStepMeta.CheckResult.FilesNotChecked=File specifications are not checked.
ExcelWriterStepMeta.CheckResult.AllFieldsFound=All output fields are found in the input stream.
ExcelWriterStepMeta.CheckResult.FieldsReceived=Step is connected to previous one, receiving {0} fields

ExcelOutput.Log.FileOpened=File [{0}] was opened
ExcelOutput.Log.OpeningFile=Opening file [{0}] ...
ExcelOutput.Log.FileClosed=File [{0}] was closed

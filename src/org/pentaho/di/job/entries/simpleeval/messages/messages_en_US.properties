#File generated by Pentaho Translator for package 'org.pentaho.di.job.entries.simpleeval' in locale 'en_US'


#Thu Dec 31 21:42:07 CET 2009
JobSimpleEval.successWhenSet.Tooltip=The job entry will success if the variable was set\\notherwise it will fail.
JobEntrySimpleEval.Error.VariableMissing=Variable name is missing\!
JobSimpleEval.SuccessWhenGreaterOrEqualThan.Label=If value is greater or equal
JobSimpleEval.SuccessNumberCondition.Label=Success condition
JobSimpleEval.SuccessBooleanCondition.Label=Success condition
JobSimpleEval.MaxValue.Label=Max
JobSimpleEval.Variable.Tooltip=Variable name
JobSimpleEval.FieldType.Label=Type
JobEntrySimpleEval.VariableSet=JobEntrySimpleEval.VariableSet\=Variable [{0}] was set.
JobSimpleEval.SuccessWhenNotStartWith.Label=If value not start with
JobSimpleEval.SuccessWhenSmallThan.Label=If value is small than
JobEntrySimpleEval.Error.FieldNotExist=We can not field [{0}] in the previous job entry result\!
JobSimpleEval.Log.CompareWithValues=Comparing incoming value [{0}] (min) and [{1}] (max)...
JobEntrySimple.Error.Exception.UnableSaveRep=Unable to save job entry in the repository 
JobEntrySimpleEval.Error.NoRows=The previous result is empty\!
JobSimpleEval.ValueType.Label=Evaluate
JobSimpleEval.SuccessWhenDifferent.Label=If value is different from
JobEntrySimple.Error.Exception.UnableLoadXML=Unable to load job entry from XML node 
JobSimpleEval.MinValue.Label=Min
JobSimpleEval.SuccessWhenRegExp.Label=If value valid regex
JobSimpleEval.MinValue.Tooltip=Min
JobEntrySimpleEval.VariableNotSet=JobEntrySimpleEval.VariableNotSet\=Variable [{0}] was not set\!
JobSimpleEval.CompareValue.Tooltip=Value
JobSimpleEval.SuccessWhenNotEndWith.Label=If value not end with
JobSimpleEval.Name.Label=Job entry name\: 
JobEntrySimpleEval.Error.IncorrectDates=Incorrect dates\! {0} (min) must be before {1} (max)\!
JobSimpleEval.FieldName.Label=Field name
JobSimpleEval.SuccessBetween.Label=If value is between
JobSimpleEval.Error.Exception.UnableSaveRep=Unable to save job entry of type ''Simple evaluation'' to the repository for id_job\={0}
JobSimpleEval.Title=Simple evaluation...
JobSimpleEval.SuccessWhenEqual.Label=If value is equal to
JobSimpleEval.EvalPreviousField.Label=Field from previous result
JobSimpleEval.Error.Exception.UnableLoadXML=Unable to load job entry of type ''Simple evaluation'' from XML node
JobSimpleEval.SuccessWhenStartWith.Label=If value starts with
JobEntrySimpleEval.Error.UnparsableDate=Can not convert value {0} to date\!
JobSimpleEval.SuccessWhenGreaterThan.Label=If value is greater than
JobSimpleEval.FieldTypeString.Label=String
JobSimpleEval.Log.ValueToevaluate=Value to evaluate is {0}
JobSimpleEval.SuccessCondition.Label=Success condition 
JobEntrySimpleEval.Error.UnparsableNumber=Can not convert value [{0}] to number\! {1}
JobSimpleEval.Mask.Label=Mask
JobSimpleEval.FieldTypeNumber.Label=Number
JobSimpleEval.SuccessWhenContains.Label=If value contains
JobSimpleEval.MaxValue.Tooltip=Max
JobSimpleEval.successWhenSet.Label=Success if variable set
JobSimpleEval.Variable.Label=Variable name
JobSimpleEval.SuccessWhenSmallOrEqualThan.Label=If value is smaller or equal
JobEntrySimple.Error.Exception.UnableLoadRep=Unable to load job entry from repository 
JobSimpleEval.EvalVariable.Label=Variable
JobSimpleEval.SuccessWhenEndWith.Label=If value ends with
JobSimpleEval.SuccessWhenNotContains.Label=If value not contains
JobSimpleEval.Name.Default=Simple evaluation
JobEntrySimpleEval.Log.ArgFromPrevious.Found=found [{0}] row(s) from previous result
JobSimpleEval.Source.Group.Label=Source
JobSimpleEval.FieldTypeDateTime.Label=Date time
JobSimpleEval.Tab.General.Label=General
JobSimpleEval.Log.CompareWithValue=Comparing incoming value [{0}] with value [{1}]...
JobSimpleEval.Error.Exception.UnableLoadRep=Unable to load job entry of type ''Simple evaluation'' from the repository for id_jobentry\=
JobSimpleEval.CompareValue.Label=Value
JobSimpleEval.SuccessOn.Group.Label=Success On
JobEntrySimpleEval.Error.IncorrectNumbers=Incorrect numbers\! [{0}] (min) must be before [{1}] (max)\!
JobSimpleEval.FieldName.Tooltip=Field name
JobSimpleEval.SuccessWhenTrue.Label=If value is TRUE
JobSimpleEval.SuccessWhenFalse.Label=If value is FALSE
JobSimpleEval.FieldTypeBoolean.Label=Boolean
JobEntrySimpleEval.Error.UnparsableBoolean=Error converting to boolean value [{0}]! Error {1}
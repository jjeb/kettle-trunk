JobFTP.Title=Transfer files via FTP ...
JobFTP.Name.Default=Get files via FTP
JobFTP.Name.Label=Name of this job entry: 
JobFTP.Name.Tooltip=The name of this job entry
JobFTP.Server.Label=FTP server name / IP address: 
JobFTP.Server.Tooltip=The FTP server name or IP address
JobFTP.User.Label=Username: 
JobEntryFTP.Start=Start of FTP job entry
JobFTP.User.Tooltip=Enter the FTP server username
JobEntryFTP.Started=Started FTP job to {0}
JobEntryFTP.GotFile=Got file [{0}]
JobFTP.Password.Label=Password: 
JobFTP.Password.Tooltip=Enter the FTP server password
JobFTP.RemoteDir.Label=Remote directory: 
JobFTP.RemoteDir.Tooltip=The remote directory on the FTP server
JobFTP.TargetDir.Label=Target directory:  
JobFTP.TargetDir.Tooltip=The target directory on the local server
JobFTP.Wildcard.Label=Wildcard (regular expression): 
JobEntryFTP.SetActive=set active ftp connection mode
JobEntryFTP.SetBinary=set binary transfer mode
JobFTP.Wildcard.Tooltip=Enter a regular expression to specify the filenames to retrieve.\nE.g. ".*\\.txt" (without quotation), to download all text files from the remote directory.
JobFTP.BinaryMode.Label=Binary mode? 
JobEntryFTP.SetEncoding=set control encoding to {0}
JobEntryFTP.FoundNFiles=Found {0} files in the remote ftp directory
JobEntryFTP.GettingFile=Getting file [{0}] to directory [{1}]
JobEntryFTP.DeletedFile=deleted file [{0}]
JobFTP.BinaryMode.Tooltip=Check to transfer files binary
JobEntryFTP.ErrorQuitting=Error quiting FTP connection: {0}
JobFTP.Timeout.Label=Timeout: 
JobEntryFTP.LoggedIn=logged in with user {0}
JobEntryFTP.SetAscii=set ASCII transfer mode
JobFTP.Timeout.Tooltip=The timeout when transferring in seconds  (0 for no timeout)
JobEntryFTP.SetPassive=set passive ftp connection mode
JobEntryFTP.SetTimeout=set timeout to {0}
JobEntryFTP.ChangedDir=Changed to directory [{0}]
JobEntryFTP.Downloaded=Downloaded from ftp server {0}
JobFTP.RemoveFiles.Label=Remove files after retrieval? 
JobFTP.RemoveFiles.Tooltip=Removes files on remote server after transfer.\nBe CAREFUL using this option, probably deletion cannot be undone.
JobFTP.DontOverwrite.Label=Don''t overwrite files: 
JobFTP.DontOverwrite.Tooltip=If activated, only files get transferred that do not already exist locally.
JobFTP.ActiveConns.Label=Use active FTP connection: 
JobEntryFTP.ErrorGetting=Error getting files from FTP : {0}
JobFTP.ActiveConns.Tooltip=Activate to use active FTP connection
JobFTP.ControlEncoding.Label=Control Encoding:
JobEntryFTP.OpenedConnection=Opened FTP connection to server [{0}]
JobFTP.ControlEncoding.Tooltip=Which character set to use for filenames/directories	
JobEntryFTP.UnableToLoadFromXml=Unable to load job entry of type 'ftp' from XML node
JobEntryFTP.CheckResult.Timeout=timeout: {0}
JobEntryFTP.UnableToLoadFromRepo=Unable to load job entry of type 'ftp' from the repository for id_jobentry={0}
JobEntryFTP.CheckResult.ServerNameIsBlank=server name is blank
JobEntryFTP.CheckResult.TargetDirIsBlank=target directory is blank
JobEntryFTP.CheckResult.UsernameIsBlank=username is blank
JobEntryFTP.CheckResult.PasswordIsNull=password is null
JobEntryFTP.CheckResult.ActiveConnection=active connection: {0}
JobEntryFTP.CheckResult.Encoding=control encoding: {0}
JobEntryFTP.CheckResult.BinaryMode=binary mode: {0}
JobEntryFTP.CheckResult.OnlyGetNew=only getting new files: {0}
JobEntryFTP.CheckResult.Wildcard=wildcard: {0}
JobEntryFTP.UnableToSaveToRepo=Unable to save job entry of type 'ftp' to the repository for id_job={0}
JobEntryFTP.CheckResult.TargetDirDoesNotExist=target directory ({0}) does not exist
JobEntryFTP.CheckResult.CannotCheckTargetDirExistence=unable to determine existence of target directory
JobEntryFTP.CheckResult.FtpDir=ftp directory: {0}
JobEntryFTP.CheckResult.Remove=remove: {0}

#File generated by Pentaho Transator for package 'org.pentaho.di.job.entries.copyfiles' in locale 'en_US'


#Wed Oct 03 18:01:07 CEST 2007
JobCopyFiles.Log.ArgFromPrevious.Found=Found [{0}] from previous result rows
JobCopyFiles.Tab.General.Label=General
JobCopyFiles.BrowseFiles.Label=File...
JobCopyFiles.Error.Exception.CopyProcessError=Copy Error
JobCopyFiles.Fields.Label=Files/Folders\: 
JobCopyFiles.Filetype.All=All files
JobCopyFiles.SourceFileFolder.Tooltip=Enter here the file or folder to copy\n If it's a folder, PDI will fetch only if ''Include subfolders'' is checked\!
JobCopyFiles.Fields.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be copied.
JobCopyFiles.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobCopyFiles.Log.FileExistsInfos=File exists\!
JobCopyFiles.Log.FileOverwrite=The file [{0}] is replaced by [{1}]
JobCopyFiles.Error.Exception.CopyProcess=Error while trying to copy folder/file [{0}] to [{1}].PDI get the following exception \: [{2}]
JobCopyFiles.FilenameDelete.Button=&Delete
JobCopyFiles.Log.FolderCopied=The folder [{0}] was copied to [{1}]
JobCopyFiles.Fields.DestinationFileFolder.Label=File/Folder destination
JobCopyFiles.Log.FileRemoved=File [{0}] was removed
JobCopyFiles.Error.CanNotRemoveFile=Can not remove file
JobCopyFiles.Log.FileCopied=The file [{0}] was copied to folder [{1}] 
JobCopyFiles.FilenameAdd.Button=&Add
JobCopyFiles.Title=Copy files...
JobCopyFiles.Log.FetchFolder=Fetch from folder [{0}]
JobCopyFiles.Error.SourceFileNotExists=Source file/folder [{0}] does not exist\!
JobCopyFiles.FilenameEdit.Button=&Edit
JobCopyFiles.Log.FolderExistsInfos=Folder exists\!
JobCopyFiles.RemoveSourceFiles.Tooltip=Remove source files after copy process\nOnly files will be removed.
JobCopyFiles.Log.ProcessingRow=Processing row source file/folder [{0}] ... destination file/folder [{1}]... wildcard [{2}]
JobCopyFiles.Log.FileOverwriteInfos=File
JobCopyFiles.Log.FileFolderRemoved=File/Folder [{0}] was removed
JobCopyFiles.Log.CanNotCopyFolderToFile=Can not copy folder [{0}] to file [{1}]
JobCopyFiles.IncludeSubfolders.Label=Include Subfolders
JobCopyFiles.Log.Forbidden=FORBIDDEN
JobCopyFiles.AddFileToResult.Label=Add files to result files name
JobCopyFiles.FilenameEdit.Tooltip=Edit selected files
JobCopyFiles.Log.FolderOverwriteInfos=Folder
JobCopyFiles.Log.FileRemovedInfos=File removed
JobCopyFiles.CopyEmptyFolders.Label=Copy empty folders
JobCopyFiles.RemoveSourceFiles.Label=Remove source files
JobCopyFiles.Fields.Wildcard.Label=Wildcard
JobCopyFiles.OverwriteFiles.Tooltip=When the destination file exists,If you want to replace it check this option.\nOtherwise, PDI will ignore it.
JobCopyFiles.Log.FileAddedToResultFilesName=The file [{0}] was added to result files name
JobCopyFiles.Log.FileCopiedInfos=File copied
JobCopyFiles.Error.Exception.CanRemoveFileFolder=Can not remove file/folder [{0}]
JobCopyFiles.CopyEmptyFolders.Tooltip=Copy empty folders\n Will work only when no wildcard was specified and ''Include subfolders'' is checked\!
JobCopyFiles.FileResult.Group.Label=Result files name
JobCopyFiles.Error.Exception.UnableSaveRep=Unable to save job entry of type 'copy files'' to the repository for id_job\=
JobCopyFiles.Log.Error=Error
JobCopyFiles.FilenameDelete.Tooltip=Remove selected files from the grid
JobCopyFiles.OverwriteFiles.Label=Replace existing files
JobCopyFiles.Log.FolderOverwrite=Folder [{0}] is replaced by
JobCopyFiles.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be copied.
JobCopyFiles.Fields.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobCopyFiles.Previous.Tooltip=Check this to pass the results of the previous entry to the arguments of this entry.\nBe careful, arguments must be in the same order that arguments\!\n ie \: (1) source folder/file, (2) destination folder/file, (3) wildcard
JobCopyFiles.Settings.Label=Settings
JobCopyFiles.Log.FolderCopiedInfos=Folder copied
JobCopyFiles.Name.Label=Job entry name\: 
JobCopyFiles.Error.Exception.UnableLoadXML=Unable to load job entry of type ''copy files'' from XML node
JobCopyFiles.Name.Default=Copy files
JobCopyFiles.Log.FolderExists=The folder [{0}] exists\!
JobCopyFiles.Previous.Label=Copy previous results to args
JobCopyFiles.Log.FileExists=The file [{0}] exists\!
JobCopyFiles.Tab.AddResultFilesName.Label=Result files name
JobCopyFiles.Error.Exception.UnableLoadRep=Unable to load job entry of type ''copy files'' from the repository for id_jobentry\=
JobCopyFiles.Fields.SourceFileFolder.Tooltip=Enter here the file or folder to copy\n If it's a folder, PDI will fetch only if ''Include subfolders'' is checked\!
JobCopyFiles.Log.IgnoringRow=Ignoring row with source or destination values equals to NULL. Source file/folder [{0}] destination file/folder [{1}] wildcard  [{2}]
JobCopyFiles.DestinationFileFolder.Label=File/Folder destination
JobCopyFiles.Log.FileFolderRemovedInfos=File/Folder removed
JobCopyFiles.Log.ResultFilesName=Result Files name
JobCopyFiles.BrowseFolders.Label=Folder...
JobCopyFiles.IncludeSubfolders.Tooltip=Check this if you want to fetch also sub folders\nThis option will work only when the source is a folder.
JobCopyFiles.SourceFileFolder.Label=File/Folder source
JobCopyFiles.Wildcard.Label=Wildcard
JobCopyFiles.AddFileToResult.Tooltip=Add destination files to result files name.\nIt is helpful if you want to attach theses files to an email thanks to send mail job entry.
JobCopyFiles.Fields.SourceFileFolder.Label=File/Folder source

################################################################################
#
# Dialog
#
################################################################################

JobCopyFiles.Title=Copy files...
JobCopyFiles.Name.Default=Copy files
JobCopyFiles.Name.Label=Job entry name: 
JobCopyFiles.SourceFileFolder.Label=File/Folder source
JobCopyFiles.SourceFileFolder.Tooltip=Enter here the file or folder to copy\n If it's a folder, PDI will fetch only if ''Include subfolders'' is checked!
JobCopyFiles.DestinationFileFolder.Label=File/Folder destination
JobCopyFiles.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobCopyFiles.Wildcard.Label=Wildcard
JobCopyFiles.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be copied.

JobCopyFiles.BrowseFiles.Label=File...
JobCopyFiles.BrowseFolders.Label=Folder...

JobCopyFiles.CopyEmptyFolders.Label=Copy empty folders
JobCopyFiles.CopyEmptyFolders.Tooltip=Copy empty folders\n Will work only when no wildcard was specified and ''Include subfolders'' is checked!
JobCopyFiles.Previous.Label=Copy previous results to args
JobCopyFiles.Previous.Tooltip=Check this to pass the results of the previous entry to the arguments of this entry.\nBe careful, arguments must be in the same order that arguments!\n ie : (1) source folder/file, (2) destination folder/file, (3) wildcard
JobCopyFiles.Fields.Label=Files/Folders: 
JobCopyFiles.Fields.SourceFileFolder.Label=File/Folder source
JobCopyFiles.Fields.DestinationFileFolder.Label=File/Folder destination
JobCopyFiles.Fields.Wildcard.Label=Wildcard
JobCopyFiles.FilenameEdit.Button = &Edit
JobCopyFiles.FilenameEdit.Tooltip=Edit selected files
JobCopyFiles.FilenameDelete.Button= &Delete
JobCopyFiles.FilenameDelete.Tooltip=Remove selected files from the grid
JobCopyFiles.Fields.SourceFileFolder.Tooltip=Enter here the file or folder to copy\n If it's a folder, PDI will fetch only if ''Include subfolders'' is checked!
JobCopyFiles.Fields.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobCopyFiles.Fields.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be copied.
JobCopyFiles.FilenameAdd.Button=&Add
JobCopyFiles.Tab.General.Label=General

JobCopyFiles.OverwriteFiles.Label=Replace existing files
JobCopyFiles.OverwriteFiles.Tooltip=When the destination file exists,If you want to replace it check this option.\nOtherwise, PDI will ignore it.
JobCopyFiles.Settings.Label=Settings
JobCopyFiles.Tab.AddResultFilesName.Label=Result files name
JobCopyFiles.IncludeSubfolders.Label=Include Subfolders
JobCopyFiles.IncludeSubfolders.Tooltip=Check this if you want to fetch also sub folders\nThis option will work only when the source is a folder.

JobCopyFiles.RemoveSourceFiles.Label=Remove source files
JobCopyFiles.RemoveSourceFiles.Tooltip=Remove source files after copy process\nOnly files will be removed.


JobCopyFiles.FileResult.Group.Label= Result files name
JobCopyFiles.AddFileToResult.Label= Add files to result files name
JobCopyFiles.AddFileToResult.Tooltip= Add destination files to result files name.\nIt is helpful if you want to attach theses files to an email thanks to send mail job entry.

JobCopyFiles.CreateDestinationFolder.Label=Create destination folder
JobCopyFiles.CreateDestinationFolder.Tooltip=Create destination folder if necessary.\nIf destination is a file, parent folder will be created if necessary.

JobCopyFiles.DestinationIsAFile.Label=Destination is a file
JobCopyFiles.DestinationIsAFile.Tooltip=PDI will consider that destination is a file.

JobCopyFiles.Filetype.All=All files

################################################################################
#
# Log
#
################################################################################


JobCopyFiles.Log.ArgFromPrevious.Found= found [{0}] argument(s) from previous result
JobCopyFiles.Log.IgnoringRow=Ignoring row with source or destination is NULL. Source File/folder source : [{0}], destination file/folder : [{1}], wilcard : [{2}]
JobCopyFiles.Log.ProcessingRow=Processing row source File/folder source : [{0}] ... destination file/folder : [{1}]... wilcard : [{2}]
JobCopyFiles.Log.CanNotCopyFolderToFile=Can not copy folder [{0}] to file [{1}]
JobCopyFiles.Log.Forbidden=FORBIDDEN
JobCopyFiles.Log.FileCopiedInfos=File copied
JobCopyFiles.Log.FileCopied=File [{0}] was copied to [{1}] 


JobCopyFiles.Log.FolderCopiedInfos=Folder copied
JobCopyFiles.Log.FolderCopied=Folder [{0}] was copied to [{1}]


JobCopyFiles.Log.FolderExistsInfos=Folder exists!
JobCopyFiles.Log.FolderExists=Folder [{0}] exists!

JobCopyFiles.Log.FileExistsInfos=File exists!
JobCopyFiles.Log.FileExists=file [{0}] exists!


JobCopyFiles.Log.FolderOverwriteInfos=Folder
JobCopyFiles.Log.FolderOverwrite=Folder [{0}] was overwritten

JobCopyFiles.Log.FileOverwriteInfos=File
JobCopyFiles.Log.FileOverwrite=File [{0}] was overwritten

JobCopyFiles.Log.FileRemoved=File [{0}] was deleted
JobCopyFiles.Log.ResultFilesName=Result filesname
JobCopyFiles.Log.FileAddedToResultFilesName=File [{0}] was added to result filesname
JobCopyFiles.Log.FetchFolder=Fetching : [{0}]
JobCopyFiles.Log.Error=Error
JobCopyFiles.Error.Exception.CanRemoveFileFolder=Can not delete file/folder [{0}]
JobCopyFiles.Log.FileFolderRemovedInfos=File/folder deleted
JobCopyFiles.Log.FileFolderRemoved=File/folder [{0}] was deleted

JobCopyFiles.Log.FileRemovedInfos=file deleted

JobCopyFiles.Error.SourceFileNotExists=File/folder [{0}] does not exists!
JobCopyFiles.Error.CanNotRemoveFile=Can not delete file


JobCopyFiles.Error.Exception.UnableLoadXML=Unable to load job entry of type ''copyfiles'' from XML node
JobCopyFiles.Error.Exception.UnableLoadRep=Unable to load job entry of type ''copyfiles'' from the repository for id_jobentry=
JobCopyFiles.Error.Exception.UnableSaveRep=Unable to save job entry of type ''copyfiles'' to the repository for id_job=
JobCopyFiles.Error.Exception.CopyProcess=Can not copy file/folder [{0}] to [{1}]. Exception : [{2}]
JobCopyFiles.Error.Exception.CopyProcessError=Copy Error
JobCopyFiles.Error.DestinationFolderNotFound=Destination folder does not exist!
############ BaseStepDialog ########################

BaseStepDialog.Connection.Label=Connection 
BaseStepDialog.NewConnectionButton.Label=&New...
BaseStepDialog.EditConnectionButton.Label=&Edit...
BaseStepDialog.FailedToGetFields.Title = Error
BaseStepDialog.FailedToGetFields.Message = There was an error while obtaining the list of fields from the previous steps for step ''{0}''. 
BaseStepDialog.GetFieldsChoice.Title = Question 
BaseStepDialog.GetFieldsChoice.Message = There already is data entered, {0} lines were found.\nHow do you want to add the {1} field that were found?  
BaseStepDialog.AddNew = Add &new
BaseStepDialog.Add = Add &all
BaseStepDialog.ClearAndAdd = C&lear and add all
BaseStepDialog.Cancel = &Cancel

BaseStepDialog.ErrorHandling.Title.Label=Step error handling settings
BaseStepDialog.ErrorHandling.StepName.Label=Error handling stepname  
BaseStepDialog.ErrorHandling.TargetStep.Label=Target step  
BaseStepDialog.ErrorHandling.Enable.Label=Enable the error handling?  
BaseStepDialog.ErrorHandling.NrErrField.Label=Nr of errors fieldname  
BaseStepDialog.ErrorHandling.ErrDescField.Label=Error descriptions fieldname  
BaseStepDialog.ErrorHandling.ErrFieldName.Label=Error fields fieldname 
BaseStepDialog.ErrorHandling.ErrCodeFieldName.Label=Error codes fieldname  
BaseStepDialog.ErrorHandling.MaxErr.Label=Max nr errors allowed  
BaseStepDialog.ErrorHandling.MaxPctErr.Label=Max % errors allowed (empty==100%) 
BaseStepDialog.ErrorHandling.MinErr.Label=Min nr of rows to read before doing % evaluation 

############ StepMeta ########################
StepMeta.Log.LookingForTheRightStepNode=looking for the right step node ({0})
StepMeta.Exception.UnableToLoadClass=Unable to load class for step/plugin with id [{0}].Check if the plugin is available in the plugins subdirectory of the Kettle distribution.
StepMeta.Log.SpecificLoadedStep=specifics loaded for {0}
StepMeta.Log.EndOfReadXML=end of readXML()
StepMeta.Exception.UnableToLoadStepInfo=Unable to load step info from XML step node
StepMeta.Exception.StepInfoCouldNotBeFound=Step information for id_step={0} could not be found!
StepMeta.Exception.StepCouldNotBeLoaded=Step with id {0} could not be loaded from the repository!
StepMeta.Log.SaveNewStep=STEP SAVE insert general...
StepMeta.Log.SaveStepDetails=STEP SAVE details...
StepMeta.Exception.UnableToSaveStepInfo=Unable to save step info to the repository for id_transformation={0}


############ BaseStep ########################

BaseStep.Category.Input = Input
BaseStep.Category.Output = Output
BaseStep.Category.Transform = Transform
BaseStep.Category.Scripting = Scripting
BaseStep.Category.Lookup = Lookup
BaseStep.Category.Joins = Joins
BaseStep.Category.DataWarehouse = Data Warehouse
BaseStep.Category.Job = Job
BaseStep.Category.Mapping = Mapping
BaseStep.Category.Inline = Inline
BaseStep.Category.Experimental = Experimental
BaseStep.Category.Deprecated = Deprecated

BaseStep.TypeLongDesc.TextFileInput=Text file input
BaseStep.TypeLongDesc.TextFileOutput=Text file output
BaseStep.TypeLongDesc.TableInput=Table input
BaseStep.TypeLongDesc.Output=Table output
BaseStep.TypeLongDesc.SelectValues=Select values
BaseStep.TypeLongDesc.FilterRows=Filter rows
BaseStep.TypeLongDesc.DatabaseLookup=Database lookup
BaseStep.TypeLongDesc.SortRows=Sort rows
BaseStep.TypeLongDesc.StreamLookup=Stream lookup
BaseStep.TypeLongDesc.AddSequence=Add sequence
BaseStep.TypeLongDesc.DimensionUpdate=Dimension lookup/update
BaseStep.TypeLongDesc.CombinationUpdate=Combination lookup/update
BaseStep.TypeLongDesc.Dummy=Dummy (do nothing)
BaseStep.TypeLongDesc.JoinRows=Join Rows (cartesian product)
BaseStep.TypeLongDesc.AggregateRows=Aggregate Rows
BaseStep.TypeLongDesc.GetSystemInfo=Get System Info
BaseStep.TypeLongDesc.GenerateRows=Generate Rows
BaseStep.TypeLongDesc.JavaScript=Java Script Value
BaseStep.TypeLongDesc.JavaScriptMod=Modified Java Script Value
BaseStep.TypeLongDesc.CallDBProcedure=Call DB Procedure
BaseStep.TypeLongDesc.InsertOrUpdate=Insert / Update
BaseStep.TypeLongDesc.Update=Update
BaseStep.TypeLongDesc.Delete=Delete
BaseStep.TypeLongDesc.RowNormaliser=Row Normaliser
BaseStep.TypeLongDesc.SplitFields=Split Fields
BaseStep.TypeLongDesc.UniqueRows=Unique rows
BaseStep.TypeLongDesc.GroupBy=Group by
BaseStep.TypeLongDesc.GetRows=Get rows from result
BaseStep.TypeLongDesc.CopyRows=Copy rows to result
BaseStep.TypeLongDesc.CubeInput=De-serialize from file
BaseStep.TypeLongDesc.CubeOutput=Serialize to file
BaseStep.TypeLongDesc.DatabaseJoin=Database join
BaseStep.TypeLongDesc.XBaseInput=XBase input
BaseStep.TypeLongDesc.ExcelInput=Excel Input
BaseStep.TypeLongDesc.NullIf=Null if...
BaseStep.TypeLongDesc.Caculator=Calculator
BaseStep.TypeLongDesc.ExcuteSQL=Execute SQL script
BaseStep.TypeLongDesc.MappingSubTransformation=Mapping (sub-transformation)
BaseStep.TypeLongDesc.MappingInput=Mapping input specification
BaseStep.TypeLongDesc.MappingOutput=Mapping output specification
BaseStep.TypeLongDesc.XMLInput=XML Input
BaseStep.TypeLongDesc.XMLInputSax=Streaming XML Input
BaseStep.TypeLongDesc.XMLOutput=XML Output
BaseStep.TypeLongDesc.AddXML=Add XML
BaseStep.TypeLongDesc.MergeRows=Merge Rows
BaseStep.TypeLongDesc.AddConstants=Add constants
BaseStep.TypeLongDesc.RowDenormaliser=Row denormaliser
BaseStep.TypeLongDesc.RowFalttener=Row flattener
BaseStep.TypeLongDesc.ValueMapper=Value Mapper
BaseStep.TypeLongDesc.SetVariable=Set Variables
BaseStep.TypeLongDesc.GetVariable=Get Variables
BaseStep.TypeLongDesc.GetFileNames=Get File Names
BaseStep.TypeLongDesc.FilesFromResult=Get files from result
BaseStep.TypeLongDesc.FilesToResult=Set files in result
BaseStep.TypeLongDesc.BlockingStep=Blocking Step
BaseStep.TypeLongDesc.Injector=Injector
BaseStep.TypeLongDesc.ExcelOutput=Excel Output
BaseStep.TypeLongDesc.AccessOutput=Access Output
BaseStep.TypeLongDesc.SortedMerge=Sorted Merge
BaseStep.TypeLongDesc.MergeJoin=Merge Join
BaseStep.TypeLongDesc.SocketReader=Socket reader
BaseStep.TypeLongDesc.SocketWriter=Socket writer
BaseStep.TypeLongDesc.HTTP=HTTP client
BaseStep.TypeLongDesc.WebServiceLookup=Web services lookup
BaseStep.TypeLongDesc.Formula=Formula
BaseStep.TypeLongDesc.Abort=Abort
BaseStep.TypeLongDesc.OraBulkLoader=Oracle Bulk Loader
BaseStep.TypeLongDesc.XMLInputPath=XML Input Path
BaseStep.TypeLongDesc.LDIFInput=LDIF Input
BaseStep.TypeLongDesc.AccessInput=Access Input

BaseStep.TypeTooltipDesc.TextInputFile=Read data from a text file in several formats.{0}This data can then be passed on to the next step(s)...
BaseStep.TypeTooltipDesc.TextOutputFile=Write rows to a text file.
BaseStep.TypeTooltipDesc.TableInput=Read information from a database table.
BaseStep.TypeTooltipDesc.TableOutput=Write information to a database table
BaseStep.TypeTooltipDesc.SelectValues=Select or remove fields in a row.{0}Optionally, set the field meta-data: type, length and precision.
BaseStep.TypeTooltipDesc.FilterRows=Filter rows using simple equations
BaseStep.TypeTooltipDesc.Databaselookup=Look up values in a database using field values
BaseStep.TypeTooltipDesc.Sortrows=Sort rows based upon field values (ascending or descending)
BaseStep.TypeTooltipDesc.Streamlookup=Look up values coming from another stream in the transformation.
BaseStep.TypeTooltipDesc.Addsequence=Get the next value from an sequence
BaseStep.TypeTooltipDesc.Dimensionupdate=Update a slowly changing dimension in a data warehouse{0}Alternatively, look up information in this dimension.
BaseStep.TypeTooltipDesc.CombinationUpdate=Update a junk dimension in a data warehouse{0}Alternatively, look up information in this dimension.{1}The primary key of a junk dimension are all the fields.
BaseStep.TypeTooltipDesc.Dummy=This step type doesn''t do anything.{0}It''s useful however when testing things or in certain situations where you want to split streams.
BaseStep.TypeTooltipDesc.JoinRows=The output of this step is the cartesian product of the input streams.{0}The number of rows is the multiplication of the number of rows in the input streams.
BaseStep.TypeTooltipDesc.AggregateRows=This step type allows you to aggregate rows.{0}It can''t do groupings.
BaseStep.TypeTooltipDesc.GetSystemInfo=Get information from the system like system date, arguments, etc.
BaseStep.TypeTooltipDesc.GenerateRows=Generate a number of empty or equal rows.
BaseStep.TypeTooltipDesc.JavaScriptValue=Create java scripts to calculate new fields, alter existing ones or manipulate a row.
BaseStep.TypeTooltipDesc.JavaScriptValueMod=This is a modified plugin for the Scripting Values with improved interface and performance.\nWritten & donated to open source by Martin Lange, Proconis : http://www.proconis.de
BaseStep.TypeTooltipDesc.CallDBProcedure=Get back information by calling a database procedure.
BaseStep.TypeTooltipDesc.InsertOrUpdate=Update or insert rows in a database based upon keys.
BaseStep.TypeTooltipDesc.Update=Update data in a database table based upon keys
BaseStep.TypeTooltipDesc.Delete=Delete data in a database table based upon keys
BaseStep.TypeTooltipDesc.RowNormaliser=De-normalised information can be normalised using this step type.
BaseStep.TypeTooltipDesc.SplitFields=When you want to split a single field into more then one, use this step type.
BaseStep.TypeTooltipDesc.Uniquerows=Remove double rows and leave only unique occurences.{0}This works only on a sorted input.{1}If the input is not sorted, only double consecutive rows are handled correctly.
BaseStep.TypeTooltipDesc.Groupby=Builds aggregates in a group by fashion.{0}This works only on a sorted input.{1}If the input is not sorted, only double consecutive rows are handled correctly.
BaseStep.TypeTooltipDesc.GetRowsFromResult=This allows you to read rows from a previous entry in a job.
BaseStep.TypeTooltipDesc.CopyRowsToResult=Use this step to write rows to the executing job.{0}The information will then be passed to the next entry in this job.
BaseStep.TypeTooltipDesc.Cubeinput=Read rows of data from a data cube.
BaseStep.TypeTooltipDesc.Cubeoutput=Write rows of data to a data cube
BaseStep.TypeTooltipDesc.Databasejoin=Execute a database query using stream values as parameters
BaseStep.TypeTooltipDesc.XBaseinput=Reads records from an XBase type of database file (DBF)
BaseStep.TypeTooltipDesc.ExcelInput=Read data from a Microsoft Excel Workbook.  This works with Excel sheets of Excel 95, 97 and 2000.
BaseStep.TypeTooltipDesc.Nullif=Sets a field value to null if it is equal to a constant value
BaseStep.TypeTooltipDesc.Calculator=Create new fields by performing simple calculations
BaseStep.TypeTooltipDesc.ExecuteSQL=Execute an SQL script, optionally parameterized using input rows
BaseStep.TypeTooltipDesc.MappingSubTransformation=Run a mapping (sub-transformation), use MappingInput and MappingOutput to specify the fields interface
BaseStep.TypeTooltipDesc.MappingInputSpecification=Specify the input interface of a mapping
BaseStep.TypeTooltipDesc.MappingOutputSpecification=Specify the output interface of a mapping
BaseStep.TypeTooltipDesc.XMLInput=Read data from an XML file
BaseStep.TypeTooltipDesc.XMLInputSax=Read data from an XML file in a streaming fashing, working faster and consuming less memory
BaseStep.TypeTooltipDesc.XMLOutput=Write data to an XML file
BaseStep.TypeTooltipDesc.AddXML=Encode several fields into an XML fragment
BaseStep.TypeTooltipDesc.MergeRows=Merge two streams of rows, sorted on a certain key.  The two streams are compared and the equals, changed, deleted and new rows are flagged.
BaseStep.TypeTooltipDesc.Addconstants=Add one or more constants to the input rows
BaseStep.TypeTooltipDesc.RowsDenormalises=Denormalises rows by looking up key-value pairs and by assigning them to new fields in the output rows.{0}This method aggregates and needs the input rows to be sorted on the grouping fields
BaseStep.TypeTooltipDesc.Rowflattener=Flattens consequetive rows based on the order in which they appear in the input stream
BaseStep.TypeTooltipDesc.MapValues=Maps values of a certain field from one value to another
BaseStep.TypeTooltipDesc.SetVariable=Set environment variables based on a single input row.
BaseStep.TypeTooltipDesc.GetVariable=Determine the values of certain (environment or Kettle) variables and put them in field values.
BaseStep.TypeTooltipDesc.GetFileNames=Get file names from the operating system and send them to the next step.
BaseStep.TypeTooltipDesc.FilesFromResult=This step allows you to read filenames used or generated in a previous entry in a job.
BaseStep.TypeTooltipDesc.FilesToResult=This step allows you to set filenames in the result of this transformation.\nSubsequent job entries can then use this information.
BaseStep.TypeTooltipDesc.BlockingStep=This step blocks until all incoming rows have been processed.  Subsequent steps only recieve the last input row to this step.
BaseStep.TypeTooltipDesc.Injector=Injector step to allow to inject rows into the transformation through the java API
BaseStep.TypeTooltipDesc.ExcelOutput=Stores records into an Excel (XLS) document with formatting information.
BaseStep.TypeTooltipDesc.AccessOutput=Stores records into an MS-Access database table.
BaseStep.TypeTooltipDesc.SortedMerge=Sorted Merge
BaseStep.TypeTooltipDesc.MergeJoin=Joins two streams on a given key and outputs a joined set. The input streams must be sorted on the join key
BaseStep.TypeTooltipDesc.SocketReader=Socket reader.  A socket client that connects to a server (Socket Writer step).
BaseStep.TypeTooltipDesc.SocketWriter=Socket writer.  A socket server that can send rows of data to a socket reader.
BaseStep.TypeTooltipDesc.HTTP=Call a web service over HTTP by supplying a base URL by allowing paramters to be set dynamically
BaseStep.TypeTooltipDesc.WebServiceLookup=Look up information using web services (WSDL)
BaseStep.TypeTooltipDesc.Formula=Calculate a formula using Pentaho''s libformula
BaseStep.TypeTooltipDesc.Abort=Abort a transformation
BaseStep.TypeTooltipDesc.OraBulkLoader=Use Oracle Bulk Loader to load data
BaseStep.TypeTooltipDesc.XMLInputPath=Read data from an XML file by looping on a XPath
BaseStep.TypeTooltipDesc.LDIFInput=Read data from an LDIF file
BaseStep.TypeTooltipDesc.AccessInput=Read data from an MS Access file

BaseStep.Log.DistributionActivated=distribution activated
BaseStep.Log.DistributionDeactivated=distribution de-activated
BaseStep.Log.ErrorSettingPriority=Error occured setting priorityFrom
BaseStep.Log.ErrorInThreadSleeping=Interupted while trying to put a new row in a buffer: 
BaseStep.Log.StopPuttingARow=Stopped while putting a row on the buffer
BaseStep.Exception.UnableToFindRowset=Unable to find rowset for target step [{0}]
BaseStep.Log.SleepInterupted=Sleep interrupted\! Stopping: 
BaseStep.Log.StopLookingForMoreRows=Stopped looking for more rows.
BaseStep.Log.SleepInterupted2=Sleep interrupted while looking for more rows from step [{0}] --> 
BaseStep.Log.SleepInterupted3=Interrupted while looking for more rows from step [{0}]
BaseStep.Log.OutputDone=Signaling ''output done'' to {0}\ output rowsets.
BaseStep.Log.StartingBuffersAllocation=Starting allocation of buffers & new threads...
BaseStep.Log.StepInfo=Step info: nrinput={0}\ nroutput={1}

BaseStep.Log.GotPreviousStep=Got previous step from [{0}] #{1} --> {2}
BaseStep.Log.InputRowInfo=input rel is {0}:{1}
BaseStep.Log.AllowedRelationships=Only 1-1, 1-n, n-1 and n-n relationships are allowed\!
BaseStep.Log.XYRelationshipsNotAllowed=This means you can''t have x-y relationships\!
BaseStep.Log.FoundInputRowset=Found input rowset [{0}]
BaseStep.Log.UnableToFindInputRowset=Unable to find input rowset\!
BaseStep.Log.OutputRowInfo=output rel. is  {0}:{1}
BaseStep.Log.FoundOutputRowset=Found output rowset [{0}]
BaseStep.Log.UnableToFindOutputRowset=Unable to find output rowset\!
BaseStep.Log.FinishedDispatching=Finished dispatching

BaseStep.Log.TooManyRejectedRows=Too many rows where rejected by the error handling, {0} is the maximum and {1} rows where rejected.  This transformation is being asked to stop.
BaseStep.Log.MaxPercentageRejectedReached=The maximum percentage of rejected rows of {0} has been reached.  {1} rows where rejected out of {2}.  This transformation is being asked to stop.

BaseStep.ColumnName.Stepname=stepname
BaseStep.ColumnName.Copy=copy
BaseStep.ColumnName.LinesReaded=lines_read
BaseStep.ColumnName.LinesWritten=lines_written
BaseStep.ColumnName.LinesUpdated=lines_updated
BaseStep.ColumnName.LinesSkipped=lines_skipped
BaseStep.ColumnName.Errors=errors
BaseStep.ColumnName.StartDate=start_date
BaseStep.ColumnName.EndDate=end_date
BaseStep.Log.SummaryInfo=Finished processing (I={0}, O={1}, R={2}, W={3}, U={4}, E={5})
BaseStep.Exception.InputStreamExpected = Step [{0}] expected an input stream, but no input was provided
BaseStep.Exception.UnexpectedErrorGettingInputStream = Unexpected error looking for input stream for step [{0}]

BaseStep.status.Empty=Empty
BaseStep.status.Init=Initialising
BaseStep.status.Running=Running
BaseStep.status.Idle=Idle
BaseStep.status.Finished=Finished
BaseStep.status.Stopped=Stopped
BaseStep.status.Disposed=Disposed
BaseStep.status.Halted=Halted

BaseStep.SafeMode.Exception.VaryingSize=We detected rows with varying number of fields, this is not allowed in a transformation.  The first row contained {0} fields, another one contained {1} : {2}
BaseStep.SafeMode.Exception.MixingLayout=The name of field number {0} is not the same as in the first row received: you''re mixing rows with different layout. Field [{1}] does not have the same name as field [{2}].
BaseStep.SafeMode.Exception.MixingTypes=The data type of field #{0} is not the same as the first row received: you''re mixing rows with different layout. Field [{1}] does not have the same data type as field [{2}].
BaseStep.SafeMode.Exception.DoubleFieldnames=The field with name [{0}] occurs twice in a row.  This is not allowed.

Calculator
--------------

Calculator needs a target data type for each calculated field.
That is because the new step properly performs data conversions.
Unlike the previous version, we will give a runtime error when no data type is specified.

JavaScript (Mod + normal)
-------------------------

The methods applied are working on the temporary generated old "Value" objects.
  We should get the results back and apply then to the rows values regardless.
  All used values should be considered and overwritten.
  For this we need the reverse.
  In case of metadata changes, we should throw an exception because that metadata exception is going to cause trouble.
  Problem    :   field.str2dat("yyyy/MM/dd");
  No problem :   var d = field.Clone().str2dat("yyyy/MM/dd").getDate();

The exposed "row" object no longer has the same data types.  
  Should we simulate this one as well?
  
The exposed "_step_" object no longer has the same putRow() method.  This is going to cause problems as well.
  This is somewhat of an "undocumented feature" and we can still expose it.  However putRow(), getRow() won't be working in the same way.
  However, the flip-side is that it will become easier to generate rows using an array and _step_.data.outputRowMeta
  
  


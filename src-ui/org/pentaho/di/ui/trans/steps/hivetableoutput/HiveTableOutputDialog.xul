<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<dialog id="hive-table-output-step-dialog"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:pen="http://www.pentaho.org/2008/xul" 
	title="${Step.Title}"
	resizable="true"
    height="530" width="735"
	appicon="ui/images/spoon.ico"
	buttons="accept,cancel,extra1"
	buttonalign="end" 
	buttonlabelaccept="${Dialog.Accept}"
	buttonlabelcancel="${Dialog.Cancel}" 
	buttonlabelextra1="${Dialog.SQL}"
	ondialogaccept="controller.onAccept()"
	ondialogcancel="controller.onCancel()"
	ondialogextra1="controller.onSQL()">
	<vbox>
		<grid>
			<columns>
				<column/>
				<column flex="1"/>
			</columns>
			<rows>
				<row>
					<label value="${Step.Name.Label}"/>
					<textbox id="step-name" flex="1" multiline="false"/>
				</row>
				<row>
					<label value="${Step.Connection.Name.Label}"/>
					<hbox flex="1">
						<textbox id="connection-name" flex="1" multiline="false"/>
						<button id="browse" label="${HiveTableOutputDialog.Connection.Edit.Label}" onclick="controller.editConnection()"/>
						<button id="browse" label="${HiveTableOutputDialog.Connection.New.Label}" onclick="controller.newConnection()"/>
					</hbox>
				</row>
				<row>
    				<label value="${Step.LoggingInterval.Label}" />
    				<hbox>
	    				<textbox id="logging-interval" width="80" flex="1" multiline="false"/>
	    			</hbox>
    			</row>  
			</rows>
		</grid>
	</vbox>
	<tabbox>
		<tabs>
			<tab label="${HiveTableOutputDialog.Options.Tab.TableOptions.Label}"/>
			<tab label="${HiveTableOutputDialog.Options.Tab.DatabaseFields.Label}"/>
		</tabs>
		<tabpanels>
			<tabpanel>
				<grid>
					<columns>
  		                <column/>
		                <column flex="1"/>
		            </columns>
					<rows>
						<row>
							<label value="${HiveTableOutputDialog.TableOptions.TargetTableName.Label}" />
							<hbox>
								<textbox id="target-table-name" flex="1" width="400" multiline="false"/>
								<button id="browse" label="${HiveTableOutputDialog.TableOptions.Browse}" onclick="controller.getTableName()"/>
							</hbox>
						</row>
    					<row>
    						<label value="${HiveTableOutputDialog.TableOptions.TruncateTable.Label}" />
    						<checkbox id="truncate-table" flex="1" command="controller.invertTruncateTable()"/>
    					</row>
						<row>
							<label value="${HiveTableOutputDialog.TableOptions.TableNameInField.Label}" />
   							<checkbox id="table-name-in-field" flex="1" command="controller.invertTableNameInField()"/>
						</row>
						<row>
		            		<label value="${HiveTableOutputDialog.TableOptions.FieldThatContainsName.Label}" />
		            		<menulist id="field-with-table-name">
							    <menupopup/>
							</menulist>		            		
		            	</row>
						<row>
							<label value="${HiveTableOutputDialog.TableOptions.StoreTableNameField.Label}" />
   							<checkbox id="store-table-name" flex="1" command="controller.invertStoreTableName()"/>
							</row>
			            </rows>
			        </grid>
			</tabpanel>
			<tabpanel>
				<label value="${HiveTableOutputDialog.TableOptions.DatabaseFields.Label}" />
				<tree flex="1" editable="true" id="fields-to-columns" autocreatenewrows="true" newitembinding="controller.addNewFieldsRow()">
					<treecols>
 						<treecol label="Field" editable="true" type="text" pen:binding="fieldName"/>
						<treecol label="Column" editable="true" type="text" pen:binding="columnName"/>
					</treecols>
						<treechildren/>
					</tree>>
					<hbox>
						<button id="get-fields" label="${HiveTableOutputDialog.DatabaseFields.GetFields.Label}" onclick="controller.getFields()"/>
						<button id="map-fields" label="${HiveTableOutputDialog.DatabaseFields.MapFieldsToColumns.Label}" onclick="controller.mapFields()"/>
					</hbox>
				</tabpanel>  			
			</tabpanels>
		</tabbox>
</dialog>

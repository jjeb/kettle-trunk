<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name/>
    <directory>/</directory>
    <log>
      <read/>
      <write/>
      <input/>
      <output/>
      <update/>
      <connection/>
      <table/>
      <use_batchid>Y</use_batchid>
      <use_logfield>N</use_logfield>
      </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
      </maxdate>
    <size_rowset>1000</size_rowset>
    <sleep_time_empty>1</sleep_time_empty>
    <sleep_time_full>1</sleep_time_full>
    <dependencies>
      </dependencies>
    </info>
  <notepads>
    <notepad>
      <note>This JavaScript asks for a start and ending date with text dialog boxes.
It is  a proof of concept if dialogs could be used within transformations and may be not supported in the future.
This could be a base for discussion if a general input step dialog should be created.
It runs within Spoon, Pan and launched by the &quot;Test script&quot; button within the JavaScript editor.
ATTENTION Mac OSX users: This functionality is not yet implemented in the SWT (see Bug ID 3492)</note>
      <xloc>19</xloc>
      <yloc>16</yloc>
      <width>544</width>
      <heigth>75</heigth>
      </notepad>
    <notepad>
      <note>This step generates one row with the fields
- DateFromProposal
- DateToProposal</note>
      <xloc>26</xloc>
      <yloc>194</yloc>
      <width>217</width>
      <heigth>49</heigth>
      </notepad>
    <notepad>
      <note>This step opens the dialog and
returns two additional fields:
- DateFromAsString
- DateToAsString</note>
      <xloc>270</xloc>
      <yloc>194</yloc>
      <width>156</width>
      <heigth>62</heigth>
      </notepad>
    <notepad>
      <note>To see the result, do a preview on this Dummy step
... or add an output step.</note>
      <xloc>448</xloc>
      <yloc>195</yloc>
      <width>257</width>
      <heigth>36</heigth>
      </notepad>
    <notepad>
      <note>Revision notes:
2006-08-07 Jens Bleuel: created</note>
      <xloc>15</xloc>
      <yloc>565</yloc>
      <width>166</width>
      <heigth>36</heigth>
      </notepad>
    </notepads>
  <order>
  <hop> <from>Generate a row with defaults</from><to>Java-Script with dialog</to><enabled>Y</enabled> </hop>  <hop> <from>Java-Script with dialog</from><to>Dummy (do nothing)</to><enabled>Y</enabled> </hop>  </order>

  <step>
    <name>Dummy (do nothing)</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
    <GUI>
      <xloc>538</xloc>
      <yloc>122</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Generate a row with defaults</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
    <fields>
      <field>
        <name>DateFromProposal</name>
        <type>Date</type>
        <format>yyyy/MM/dd</format>
        <currency/>
        <decimal/>
        <group/>
        <nullif>2006/01/01</nullif>
        <length>-1</length>
        <precision>-1</precision>
        </field>
      <field>
        <name>DateToProposal</name>
        <type>Date</type>
        <format>yyyy/MM/dd</format>
        <currency/>
        <decimal/>
        <group/>
        <nullif>2006/12/31</nullif>
        <length>-1</length>
        <precision>-1</precision>
        </field>
      </fields>
    <limit>1</limit>
    <GUI>
      <xloc>82</xloc>
      <yloc>120</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Java-Script with dialog</name>
    <type>ScriptValue</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
    <script>// This JavaScript asks for a start and ending date with text dialog boxes.
// It is  a proof of concept if dialogs could be used out of JavaScript within transformations.
// This could be a base for discussion if a general input step dialog should be created.
// It runs within Spoon, Pan and launched by the &quot;Test script&quot; button within the JavaScript editor.
// @author Jens Bleuel
// @since 2006-07-11


// to get the &quot;Test script&quot; button at the editor working correctly we need the existing Display / Shell
var display=new Packages.org.eclipse.swt.widgets.Display.getCurrent();
var displayHasToBeDisposed=false;
var shell=null;

try {
    shell=display.getActiveShell();
} catch(e) {
    // if it runs in batch mode (Pan or preview mode) no Display is available, so we have to create one
    display=new Packages.org.eclipse.swt.widgets.Display();
    displayHasToBeDisposed=true;
    shell=new Packages.org.eclipse.swt.widgets.Shell(display);
}

// if we run in Pan we need to load the properties:
if(!Packages.be.ibridge.kettle.core.Props.isInitialized()) {
    Packages.be.ibridge.kettle.core.Props.init(display,2); //2=TYPE_PROPERTIES_PAN
}

var dateDefaultFrom=DateFromProposal.getString().substr(0,10); //only the date and not the time
var dialogDateFrom=new Packages.be.ibridge.kettle.core.dialog.EnterTextDialog(shell, &quot;Date from&quot;, &quot;Please enter the beginning date&quot;, dateDefaultFrom);
var dateFromAsString=dialogDateFrom.open();

if(dateFromAsString!=null &amp;&amp; dateFromAsString.length()&gt;0) {
    var dateDefaultTo=DateToProposal.getString().substr(0,10); //only the date and not the time;
    var dialogDateTo=new Packages.be.ibridge.kettle.core.dialog.EnterTextDialog(shell, &quot;Date to&quot;, &quot;Please enter the ending date&quot;, dateDefaultTo);
    var dateToAsString=dialogDateTo.open();
    if(dateToAsString!=null &amp;&amp; dateToAsString.length()&gt;0) {
        // here you could check or change formats a.s.o
    } else {
        // stop transformation when user cancels
        throw new Packages.java.lang.RuntimeException(&quot;Input canceled by the user.&quot;);
    }
} else {
    // stop transformation when user cancels
    throw new Packages.java.lang.RuntimeException(&quot;Input canceled by the user.&quot;);
}

if(displayHasToBeDisposed) {
  display.dispose();
}
</script>
    <fields>      <field>        <name>dateFromAsString</name>
        <rename>dateFromAsString</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        </field>      <field>        <name>dateToAsString</name>
        <rename>dateToAsString</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        </field>      </fields>    <GUI>
      <xloc>333</xloc>
      <yloc>120</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

</transformation>
